<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Profile</title>
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH" crossorigin="anonymous">
  {{> prettycss}}
</head>
<body class="profile-page">
  <div class="container d-flex justify-content-center">
    <div class="profile-card p-4 w-100" style="max-width: 960px;">
        {{#if message}}
          <div class="alert alert-{{#if error}}danger{{else}}success{{/if}}">
            {{message}}
          </div>
        {{/if}}
        <h2>Profile</h2>  
        <div class="row">
          <div class="col-md-4">
            <div class="card mb-4">
              <div class="card-body text-center">
                {{#if user.profile_picture_path}}
                  <img src="{{user.profile_picture_path}}?t={{timestamp}}" 
                      alt="Profile Picture" class="rounded-circle mb-3" 
                      width="150" height="150" style="object-fit: cover;">
                {{else}}
                  <img src="/resources/images/image.png" 
                      alt="Default Profile" class="rounded-circle mb-3" 
                      width="150" height="150" style="object-fit: cover;">
                {{/if}}
                <form action="/profile/upload-picture" method="POST" enctype="multipart/form-data">
                  <div class="mb-3">
                    <input type="file" class="form-control" name="profilePicture" accept="image/*" required>
                  </div>
                  <button type="submit" class="btn btn-primary w-100">Upload Picture</button>
                </form>
              </div>
            </div>
          </div>
      <div class="col-md-8">
        <h4>Username: {{user.username}} <a href="#" class="text-primary" onclick="toggleEdit('username')">Edit</a></h4>
        <div id="edit-username" class="edit-box" style="display: none;">
          <form method="POST" action="/profile/edit">
            <input type="hidden" name="field" value="username">
            <input type="text" class="form-control" name="editValue" placeholder="New Username" required>
            <button type="submit" class="btn btn-success mt-2">Save</button>
            <button type="button" class="btn btn-secondary mt-2" onclick="cancelEdit('username')">Cancel</button>
          </form>
        </div>

        <h4>Email: {{user.email}} <a href="#" class="text-primary" onclick="toggleEdit('email')">Edit</a></h4>
        <div id="edit-email" class="edit-box" style="display: none;">
          <form method="POST" action="/profile/edit">
            <input type="hidden" name="field" value="email">
            <input type="email" class="form-control" name="editValue" placeholder="New Email" required>
            <button type="submit" class="btn btn-success mt-2">Save</button>
            <button type="button" class="btn btn-secondary mt-2" onclick="cancelEdit('email')">Cancel</button>
          </form>   
        </div>

        <h4>Password <a href="#" class="text-primary" onclick="toggleEdit('password')">Change Password</a></h4>
        <div id="edit-password" class="edit-box" style="display: {{#if keepPasswordEditOpen}}block{{else}}none{{/if}};">
          <form method="POST" action="/profile/edit">
            <input type="hidden" name="field" value="password">
            <div class="mb-3 position-relative">
              <input type="password" class="form-control" name="currentPassword" placeholder="Current Password" required>
              {{#if passwordError}}
                <div class="text-danger position-absolute" style="top: -25px; left: 0; font-size: 0.9rem; background-color: #fff; padding: 5px; border-radius: 5px; box-shadow: 0px 0px 5px rgba(0, 0, 0, 0.2);">
                  {{passwordError}}
                </div>
              {{/if}}
            </div>
            <input type="password" class="form-control mt-2" name="newPassword" placeholder="New Password" required>
            <button type="submit" class="btn btn-success mt-2">Save</button>
            <button type="button" class="btn btn-secondary mt-2" onclick="cancelEdit('password')">Cancel</button>
          </form>
        </div>
      </div>
    </div>

    <hr>
    <h3>Skills</h3>
    <ul id="skills-list">
      {{#each skills}}
        <li id="skill-{{this.skill_id}}" class="skill-tag">
          <div>
            <span class="skill-name">{{this.skill_name}}</span>
            <span class="skill-buffer">Â·</span>
            <span class="skill-level" id="skill-level-{{this.skill_id}}">
              {{this.expertise_level}}
            </span>
          </div>
          <div id="edit-actions-{{this.skill_id}}" class="d-flex">
            <button class="btn btn-outline-secondary btn-sm" id="edit-btn-{{this.skill_id}}" onclick="startEditSkill('{{this.skill_id}}', '{{this.expertise_level}}')">Edit</button>
          </div>
        </li>
      {{/each}}
    </ul>
    <button id="toggle-add-skill-btn" class="btn btn-primary mt-3" onclick="toggleAddSkill()">Add Skill</button>

    <div id="add-skill-section" class="mt-4" style="display: none;">
      <form id="add-skill-form" method="POST" action="/profile/add-skill">
        <div class="mb-3">
          <label for="skill-id" class="form-label">Skill</label>
          <select class="form-control" id="skill-id" name="skillId" required>
            {{#each predefinedSkills}}
              <option value="{{this.id}}">{{this.skill_name}}</option>
            {{/each}}
          </select>
        </div>
        <div class="mb-3">
          <label for="expertise-level" class="form-label">Proficiency Level</label>
          <select class="form-control" id="expertise-level" name="expertiseLevel" required>
            <option value="novice">Novice</option>
            <option value="intermediate">Intermediate</option>
            <option value="advanced">Advanced</option>
            <option value="expert">Expert</option>
            <option value="professional">Professional</option>
          </select>
        </div>
        <button type="submit" class="btn btn-primary">Add Skill</button>
      </form>
    </div>
    <div style="height: 50px;"></div>
  </div>

  <script>
    function toggleEdit(field) {
      document.getElementById(`edit-${field}`).style.display = 'block';
    }

    function cancelEdit(field) {
      document.getElementById(`edit-${field}`).style.display = 'none';
    }

    function toggleAddSkill() {
      const addSkillSection = document.getElementById('add-skill-section');
      const toggleButton = document.getElementById('toggle-add-skill-btn');

      if (addSkillSection.style.display === 'none') {
        // Show the add skill section and change the button to "Cancel"
        addSkillSection.style.display = 'block';
        toggleButton.textContent = 'Cancel';
        toggleButton.classList.remove('btn-primary');
        toggleButton.classList.add('btn-secondary');
      } else {
        // Hide the add skill section and change the button back to "Add Skill"
        addSkillSection.style.display = 'none';
        toggleButton.textContent = 'Add Skill';
        toggleButton.classList.remove('btn-secondary');
        toggleButton.classList.add('btn-primary');
      }
    }

    function startEditSkill(skillId, currentLevel) {
      const levels = ['novice', 'intermediate', 'advanced', 'expert', 'professional'];
      const dropdown = levels
        .map(level => `<option value="${level}" ${level === currentLevel ? 'selected' : ''}>${level}</option>`)
        .join('');

      // Replace the proficiency text with a drop-down menu
      const skillLevelElement = document.getElementById(`skill-level-${skillId}`);
      skillLevelElement.innerHTML = `
        <form method="POST" action="/profile/edit-skill" class="d-inline" onsubmit="return saveSkillEdit(event, '${skillId}')">
          <select name="expertiseLevel" class="form-control form-control-sm d-inline" style="width: auto;">
            ${dropdown}
          </select>
          <input type="hidden" name="skillId" value="${skillId}">
          <button type="submit" class="btn btn-success btn-sm">Save</button>
          <button type="button" class="btn btn-secondary btn-sm" onclick="cancelEditSkill('${skillId}', '${currentLevel}')">Cancel</button>
        </form>
      `;

      // Replace the "Edit" button with "Remove" and "Save/Cancel" buttons
      const editActions = document.getElementById(`edit-actions-${skillId}`);
      editActions.innerHTML = `
        <form method="POST" action="/profile/remove-skill" class="d-inline">
          <input type="hidden" name="skillId" value="${skillId}">
          <button type="submit" class="btn btn-danger btn-sm">Remove</button>
        </form>
      `;
    }

    function saveSkillEdit(event, skillId) {
      event.preventDefault(); // Prevent the form from submitting normally

      const form = event.target;
      const formData = new FormData(form);
      const expertiseLevel = formData.get('expertiseLevel');

      // Send the updated proficiency level to the server
      fetch('/profile/edit-skill', {
        method: 'POST',
        body: formData,
      })
        .then(response => {
          if (response.ok) {
            // Update the proficiency text with the new level
            const skillLevelElement = document.getElementById(`skill-level-${skillId}`);
            skillLevelElement.textContent = expertiseLevel;

            // Restore the "Edit" button
            const editActions = document.getElementById(`edit-actions-${skillId}`);
            editActions.innerHTML = `
              <button class="btn btn-secondary btn-sm" id="edit-btn-${skillId}" onclick="startEditSkill('${skillId}', '${expertiseLevel}')">Edit</button>
            `;
          } else {
            alert('Failed to update skill proficiency level.');
          }
        })
        .catch(error => {
          console.error('Error updating skill proficiency level:', error);
          alert('An error occurred while updating the skill proficiency level.');
        });

      return false; // Prevent the default form submission
    }

    function cancelEditSkill(skillId, currentLevel) {
      // Restore the original proficiency text
      const skillLevelElement = document.getElementById(`skill-level-${skillId}`);
      skillLevelElement.textContent = currentLevel;

      // Restore the "Edit" button
      const editActions = document.getElementById(`edit-actions-${skillId}`);
      editActions.innerHTML = `
        <button class="btn btn-secondary btn-sm" id="edit-btn-${skillId}" onclick="startEditSkill('${skillId}', '${currentLevel}')">Edit</button>
      `;
    }
    
  </script>
</body>
</html>